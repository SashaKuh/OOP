# Базовий клас, що буде виступати як прототип
class Shape:
    def clone(self):
        # Реалізація методу клонування, що створює новий об'єкт того ж типу
        new_obj = self.__class__.__new__(self.__class__)
        new_obj.__dict__.update(self.__dict__)
        return new_obj

# Клас Circle (Коло), що наслідує клас Shape
class Circle(Shape):
    def __init__(self, radius):
        self.radius = radius

    def __str__(self):
        return f"Circle with radius: {self.radius}"

# Клас Rectangle (Прямокутник), що наслідує клас Shape
class Rectangle(Shape):
    def __init__(self, width, height):
        self.width = width
        self.height = height

    def __str__(self):
        return f"Rectangle with width: {self.width} and height: {self.height}"

# Використання паттерну Прототип
circle1 = Circle(5)
circle2 = circle1.clone()
rectangle1 = Rectangle(10, 20)
rectangle2 = rectangle1.clone()

# Зміна значень клонованих об'єктів для перевірки, що це дійсно різні об'єкти
circle2.radius = 7
rectangle2.width = 15

print(circle1)    # Виведе: Circle with radius: 5
print(circle2)    # Виведе: Circle with radius: 7
print(rectangle1) # Виведе: Rectangle with width: 10 and height: 20
print(rectangle2) # Виведе: Rectangle with width: 15 and height: 20
